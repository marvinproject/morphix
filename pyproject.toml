[project]
name = "morphix"
version = "0.1.0"
description = "Enterprise-grade agent application with workflow engine"
authors = [
    {name = "Marvin Team", email = "team@marvinproject.io"}
]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
# Core dependencies required for the project to run
dependencies = [
    # Web Core
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.34.3",
    "python-multipart>=0.0.20",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.9.1",
    "httpx>=0.28.1",
    "tenacity>=9.1.2",
    # Database
    "sqlalchemy>=2.0.41",
    "asyncpg>=0.30.0",
    "pgvector>=0.4.1",
    "alembic>=1.16.1",
    # Security and Authentication
    "python-jose[cryptography]>=3.5.0",
    "passlib[bcrypt]>=1.7.4",
    # Task
    "celery>=5.5.3",
    "redis>=6.2.0",
    # Other
    "langgraph>=0.4.8",
]

# PEP 735: Dependency groups definition
[dependency-groups]

# Testing dependencies
test = [
    "factory-boy>=3.3.3",
    "faker>=37.4.0",
    "httpx>=0.28.1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
]

# Code quality and formatting tools
lint = [
    "black>=25.1.0",
    "mypy>=1.16.0",
    "ruff>=0.11.13",
    "types-passlib>=1.7.7.20250602",
    "types-redis>=4.6.0.20241004",
]

# Development tools
dev-tools = [
    "pre-commit>=4.2.0",
    "isort>=6.0.1",
]

# Production environment specific dependencies
prod = [
    "gevent>=25.5.1",
    "gunicorn>=23.0.0",
]

# Documentation generation
docs = [
    "myst-parser>=4.0.1",
    "sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
]

# Performance profiling tools
profiling = [
    "line-profiler>=4.2.0",
    "memory-profiler>=0.61.0",
    "py-spy>=0.4.0",
]

# Security audit tools
security = [
    "bandit>=1.8.3",
    "pip-audit>=2.9.0",
    "safety>=3.2.9",
]

# Complete development environment (combining multiple dependency groups)
dev = [
    {include-group = "test"},
    {include-group = "lint"},
    {include-group = "dev-tools"},
    {include-group = "docs"},
    {include-group = "security"},
]

# UV specific configuration
[tool.uv]
# UV package manager configuration
package = true

[tool.black]
line-length = 100
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py312"
